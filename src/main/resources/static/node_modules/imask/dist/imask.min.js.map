{"version":3,"file":"imask.min.js","sources":["../src/core/change-details.js","../src/core/utils.js","../src/core/action-details.js","../src/core/continuous-tail-details.js","../src/core/holder.js","../src/masked/base.js","../src/masked/factory.js","../src/masked/pattern/input-definition.js","../src/masked/pattern/fixed-definition.js","../src/masked/pattern/chunk-tail-details.js","../src/masked/pattern/cursor.js","../src/masked/regexp.js","../src/masked/pattern.js","../src/masked/range.js","../src/masked/date.js","../src/controls/mask-element.js","../src/controls/html-mask-element.js","../src/controls/html-contenteditable-mask-element.js","../src/controls/input.js","../src/masked/enum.js","../src/masked/number.js","../src/masked/function.js","../src/masked/dynamic.js","../src/masked/pipe.js","../src/index.js"],"sourcesContent":["// @flow\n\n\n/**\n  Provides details of changing model value\n  @param {Object} [details]\n  @param {string} [details.inserted] - Inserted symbols\n  @param {boolean} [details.skip] - Can skip chars\n  @param {number} [details.removeCount] - Removed symbols count\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n*/\nexport default\nclass ChangeDetails {\n  /** Inserted symbols */\n  inserted: string;\n  /** Can skip chars */\n  skip: boolean;\n  /** Additional offset if any changes occurred before tail */\n  tailShift: number;\n  /** Raw inserted is used by dynamic mask */\n  rawInserted: string;\n\n  constructor (details?: {\n    inserted?: $PropertyType<ChangeDetails, 'inserted'>,\n    rawInserted?: $PropertyType<ChangeDetails, 'rawInserted'>,\n    skip?: $PropertyType<ChangeDetails, 'skip'>,\n    tailShift?: $PropertyType<ChangeDetails, 'tailShift'>,\n  }) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0,\n    }, details);\n  }\n\n  /**\n    Aggregate changes\n    @returns {ChangeDetails} `this`\n  */\n  aggregate (details: ChangeDetails): ChangeDetails {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset (): number {\n    return this.tailShift + this.inserted.length;\n  }\n}\n","// @flow\nimport ChangeDetails from './change-details.js';\n\n\n/** Checks if value is string */\nexport\nfunction isString (str: mixed): boolean %checks {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/**\n  Direction\n  @prop {string} NONE\n  @prop {string} LEFT\n  @prop {string} FORCE_LEFT\n  @prop {string} RIGHT\n  @prop {string} FORCE_RIGHT\n*/\nexport\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT',\n}\n/**\n  Direction\n  @enum {string}\n*/\nexport\ntype Direction = $Values<typeof DIRECTION>;\n\n/** Returns next char index in direction */\nexport\nfunction indexInDirection (pos: number, direction: Direction): number {\n  if (direction === DIRECTION.LEFT) --pos;\n  return pos;\n}\n\n/** Returns next char position in direction */\nexport\nfunction posInDirection (pos: number, direction: Direction): number {\n  switch (direction) {\n    case DIRECTION.LEFT:\n    case DIRECTION.FORCE_LEFT:\n      return --pos;\n    case DIRECTION.RIGHT:\n    case DIRECTION.FORCE_RIGHT:\n      return ++pos;\n    default:\n      return pos;\n  }\n}\n\n/** */\nexport\nfunction forceDirection (direction: Direction): Direction {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nexport\nfunction escapeRegExp (str: string): string {\n  return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n\nexport\nfunction normalizePrepare (prep: string | [string, ChangeDetails]): [string, ChangeDetails] {\n  return Array.isArray(prep) ? prep : [\n    prep,\n    new ChangeDetails(),\n  ];\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nexport\nfunction objectIncludes (b: any, a: any): boolean {\n  if (a === b) return true;\n\n  var arrA = Array.isArray(a)\n    , arrB = Array.isArray(b)\n    , i;\n\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++)\n      if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n\n    var keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++)\n      // $FlowFixMe ... ???\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if(!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n      return a.toString() === b.toString()\n  }\n\n  return false;\n}\n\n/** Selection range */\nexport\ntype Selection = {\n  start: number;\n  end: number;\n};\n","// @flow\nimport {type Direction, type Selection, DIRECTION} from './utils.js';\n\n\n/** Provides details of changing input */\nexport default\nclass ActionDetails {\n  /** Current input value */\n  value: string;\n  /** Current cursor position */\n  cursorPos: number;\n  /** Old input value */\n  oldValue: string;\n  /** Old selection */\n  oldSelection: Selection;\n\n  constructor (\n    value: string,\n    cursorPos: number,\n    oldValue: string,\n    oldSelection: Selection\n  ) {\n    this.value = value;\n    this.cursorPos = cursorPos;\n    this.oldValue = oldValue;\n    this.oldSelection = oldSelection;\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n\n  /**\n    Start changing position\n    @readonly\n  */\n  get startChangePos (): number {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /**\n    Inserted symbols count\n    @readonly\n  */\n  get insertedCount (): number {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /**\n    Inserted symbols\n    @readonly\n  */\n  get inserted (): string {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /**\n    Removed symbols count\n    @readonly\n  */\n  get removedCount (): number {\n    // Math.max for opposite operation\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\n      // for Delete\n      this.oldValue.length - this.value.length, 0);\n  }\n\n  /**\n    Removed symbols\n    @readonly\n  */\n  get removed (): string {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /**\n    Unchanged head symbols\n    @readonly\n  */\n  get head (): string {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /**\n    Unchanged tail symbols\n    @readonly\n  */\n  get tail (): string {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /**\n    Remove direction\n    @readonly\n  */\n  get removeDirection (): Direction {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (\n      (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n      // if not range removed (event with backspace)\n      this.oldSelection.end === this.oldSelection.start\n    ) ?\n      DIRECTION.RIGHT :\n      DIRECTION.LEFT;\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from './tail-details.js';\nimport type ChangeDetails from './change-details.js';\n\n\ntype ContinuousTailState = {\n  value: $PropertyType<ContinuousTailDetails, 'value'>,\n  from: $PropertyType<ContinuousTailDetails, 'from'>,\n  stop?: $PropertyType<ContinuousTailDetails, 'stop'>,\n};\n\n/** Provides details of continuous extracted tail */\nexport default\nclass ContinuousTailDetails implements TailDetails {\n  /** Tail value as string */\n  value: string;\n  /** Tail start position */\n  from: number;\n  /** Start position */\n  stop: ?number;\n\n  constructor (value?: string='', from?: number=0, stop?: number) {\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n\n  toString (): string { return this.value; }\n\n  extend (tail: string | TailDetails): void {\n    this.value += String(tail);\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    return masked.append(this.toString(), { tail: true })\n      .aggregate(masked._appendPlaceholder());\n  }\n\n  get state (): ContinuousTailState {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop,\n    };\n  }\n\n  set state (state: ContinuousTailState) {\n    Object.assign(this, state);\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.value.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n\n  shift (): string {\n    if (!this.value.length) return '';\n\n    const shiftChar = this.value[this.value.length-1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n","/**\n * Applies mask on element.\n * @constructor\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\n * @param {Object} opts - Custom mask options\n * @return {InputMask}\n */\nexport default\nfunction IMask (el, opts={}) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n","// @flow\nimport ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type Direction, DIRECTION, isString, normalizePrepare, forceDirection } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\n/** Supported mask type */\nexport\ntype Mask =\n  string |\n  String |\n  RegExp |\n  Class<Number> |\n  Class<Date> |\n  Array<any> |\n  $PropertyType<Masked<*>, 'validate'> |\n  Masked<*> |\n  Class<Masked<*>>;\n\nexport\ntype MaskedState = {|\n  _value: string,\n|};\n\n/** Append flags */\nexport\ntype AppendFlags = {\n  input?: boolean,\n  tail?: boolean,\n  raw?: boolean,\n  _beforeTailState?: any,  // TODO types...\n};\n\n/** Extract flags */\nexport\ntype ExtractFlags = {\n  raw?: boolean\n};\n\nexport\ntype MaskedOptions<MaskType> = {\n  mask: $PropertyType<Masked<MaskType>, 'mask'>,\n  parent?: $PropertyType<Masked<*>, 'parent'>,\n  prepare?: $PropertyType<Masked<MaskType>, 'prepare'>,\n  validate?: $PropertyType<Masked<MaskType>, 'validate'>,\n  commit?: $PropertyType<Masked<MaskType>, 'commit'>,\n  overwrite?: $PropertyType<Masked<MaskType>, 'overwrite'>,\n  eager?: $PropertyType<Masked<MaskType>, 'eager'>,\n  format?: $PropertyType<Masked<MaskType>, 'format'>,\n  parse?: $PropertyType<Masked<MaskType>, 'parse'>,\n};\n\n\n/** Provides common masking stuff */\nexport default\nclass Masked<MaskType> {\n  static DEFAULTS: any; // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\n  static EMPTY_VALUES: any;\n\n  /** @type {Mask} */\n  mask: MaskType;\n  /** */ // $FlowFixMe no ideas\n  parent: ?Masked<*>;\n  /** Transforms value before mask processing */\n  prepare: (string, Masked<MaskType>, AppendFlags) => string | [string, ChangeDetails];\n  /** Validates if value is acceptable */\n  validate: (string, Masked<MaskType>, AppendFlags) => boolean;\n  /** Does additional processing in the end of editing */\n  commit: (string, Masked<MaskType>) => void;\n  /** Format typed value to string */\n  format: (any, Masked<MaskType>) => string;\n  /** Parse strgin to get typed value */\n  parse: (string, Masked<MaskType>) => any;\n  /** Enable characters overwriting */\n  overwrite: ?boolean | 'shift';\n  /** */\n  eager: boolean;\n  /** */\n  isInitialized: boolean;\n  _value: string;\n  _refreshing: ?boolean;\n  _isolated: ?boolean;\n\n  constructor (opts: {[string]: any}) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts,\n    });\n    this.isInitialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions (opts: {[string]: any}) {\n    if (!Object.keys(opts).length) return;\n    // $FlowFixMe\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /**\n    Sets new options\n    @protected\n  */\n  _update (opts: {[string]: any}) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state (): any {\n    return {\n      _value: this.value,\n    };\n  }\n\n  set state (state: any) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset () {\n    this._value = '';\n  }\n\n  /** */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (value: string) {\n    this.resolve(value);\n  }\n\n  /** Resolve new value */\n  resolve (value: string): string {\n    this.reset();\n    this.append(value, {input: true}, '');\n    this.doCommit();\n    return this.value;\n  }\n\n  /** */\n  get unmaskedValue (): string {\n    return this.value;\n  }\n\n  set unmaskedValue (value: string) {\n    this.reset();\n    this.append(value, {}, '');\n    this.doCommit();\n  }\n\n  /** */\n  get typedValue (): any {\n    return this.doParse(this.value);\n  }\n\n  set typedValue (value: any) {\n    this.value = this.doFormat(value);\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue (): string {\n    return this.extractInput(0, this.value.length, {raw: true});\n  }\n\n  set rawInputValue (value: string) {\n    this.reset();\n    this.append(value, {raw: true}, '');\n    this.doCommit();\n  }\n\n  /** */\n  get isComplete (): boolean {\n    return true;\n  }\n\n  /** */\n  get isFilled (): boolean {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    return cursorPos;\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.value.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!ch) return new ChangeDetails();\n\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch,\n    });\n  }\n\n  /** Appends char */\n  _appendChar (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): ChangeDetails {\n    const consistentState: MaskedState = this.state;\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(this.doPrepare(ch, flags));\n\n    details = details.aggregate(this._appendCharRaw(ch, flags));\n\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          checkTail.unshift(this.value.length - details.tailShift);\n        }\n\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted === checkTail.toString();\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          checkTail.shift();\n\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted === checkTail.toString();\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at end */\n  _appendPlaceholder (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at end */\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  // $FlowFixMe no ideas\n  append (str: string, flags?: AppendFlags, tail?: string | String | TailDetails): ChangeDetails {\n    if (!isString(str)) throw new Error('value should be string');\n    const details = new ChangeDetails();\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags?.tail) flags._beforeTailState = this.state;\n\n    for (let ci=0; ci<str.length; ++ci) {\n      details.aggregate(this._appendChar(str[ci], flags, checkTail));\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n\n    if (this.eager && flags?.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    return details;\n  }\n\n  /** */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh<T>(fn: () => T): T {\n    if (this._refreshing || !this.isInitialized) return fn();\n    this._refreshing = true;\n\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n\n    const ret = fn();\n\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.value.length), {}, '');\n    }\n\n    delete this._refreshing;\n    return ret;\n  }\n\n  /** */\n  runIsolated<T>(fn: (masked: any) => T): T {\n    if (this._isolated || !this.isInitialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n\n    const ret = fn(this);\n\n    this.state = state;\n    delete this._isolated;\n\n    return ret;\n  }\n\n  /**\n    Prepares string before mask processing\n    @protected\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    return this.prepare ?\n      this.prepare(str, this, flags) :\n      str;\n  }\n\n  /**\n    Validates if value is acceptable\n    @protected\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return (!this.validate || this.validate(this.value, this, flags)) &&\n      (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /**\n    Does additional processing in the end of editing\n    @protected\n  */\n  doCommit () {\n    if (this.commit) this.commit(this.value, this);\n  }\n\n  /** */\n  doFormat (value: any): string {\n    return this.format ? this.format(value, this) : value;\n  }\n\n  /** */\n  doParse (str: string): string {\n    return this.parse ? this.parse(str, this) : str;\n  }\n\n  /** */\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction, flags: AppendFlags = { input: true }): ChangeDetails {\n    const tailPos: number = start + deleteCount;\n    const tail: TailDetails = this.extractTail(tailPos);\n\n    let oldRawValue;\n    if (this.eager)  {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {raw: true});\n    }\n\n    let startChangePos: number = start;\n    const details: ChangeDetails = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !this.eager ? DIRECTION.NONE : removeDirection);\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n\n    details.aggregate(this.remove(startChangePos));\n\n    if (this.eager && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {\n          details\n            .aggregate(new ChangeDetails({ tailShift: -1 }))\n            .aggregate(this.remove(valLength-1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n\n  maskEquals (mask: any): boolean {\n    return this.mask === mask;\n  }\n\n  typedValueEquals (value: any): boolean {\n    const tval = this.typedValue;\n\n    return value === tval ||\n      Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) ||\n      this.doFormat(value) === this.doFormat(this.typedValue);\n  }\n}\nMasked.DEFAULTS = {\n  format: v => v,\n  parse: v => v,\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\n\n\nIMask.Masked = Masked;\n","// @flow\nimport { isString } from '../core/utils.js';\nimport type Masked from './base.js';\nimport { type Mask } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Get Masked class by mask type */\nexport\nfunction maskedClass (mask: Mask): Class<Masked<*>> {\n  if (mask == null) {\n    throw new Error('mask property should be defined');\n  }\n\n  // $FlowFixMe\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  // $FlowFixMe\n  if (isString(mask)) return IMask.MaskedPattern;\n  // $FlowFixMe\n  if (mask instanceof Date || mask === Date) return IMask.MaskedDate;\n  // $FlowFixMe\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return IMask.MaskedNumber;\n  // $FlowFixMe\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  // $FlowFixMe\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  // $FlowFixMe\n  if (mask instanceof IMask.Masked) return mask.constructor;\n  // $FlowFixMe\n  if (mask instanceof Function) return IMask.MaskedFunction;\n\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\n  // $FlowFixMe\n  return IMask.Masked;\n}\n\n/** Creates new {@link Masked} depending on mask type */\nexport default\nfunction createMask (opts: {mask: Mask} | Masked<*>): Masked<*> {\n  // $FlowFixMe\n  if (IMask.Masked && (opts instanceof IMask.Masked)) return opts;\n\n  opts = {...opts};\n  const mask = opts.mask;\n\n  // $FlowFixMe\n  if (IMask.Masked && (mask instanceof IMask.Masked)) return mask;\n\n  const MaskedClass = maskedClass(mask);\n  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.');\n  return new MaskedClass(opts);\n}\n\n\nIMask.createMask = createMask;\n","// @flow\nimport createMask from '../factory.js';\nimport type Masked from '../base.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport { type Mask, type ExtractFlags, type AppendFlags } from '../base.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction } from '../../core/utils.js';\nimport { type PatternBlock } from './block.js';\n\n\nexport\ntype Definitions = {[string]: Mask};\n\n/** */\ntype PatternInputDefinitionOptions = {\n  parent: $PropertyType<PatternInputDefinition, 'parent'>,\n  mask: Mask,\n  isOptional: $PropertyType<PatternInputDefinition, 'isOptional'>,\n  lazy: $PropertyType<PatternInputDefinition, 'lazy'>,\n  eager: $PropertyType<PatternInputDefinition, 'eager'>,\n  placeholderChar: $PropertyType<PatternInputDefinition, 'placeholderChar'>,\n};\n\ntype PatternInputDefinitionState = {\n  masked: *,\n  isFilled: boolean,\n};\n\nexport\nconst DEFAULT_INPUT_DEFINITIONS: { [string]: RegExp } = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\n\n/** */\nexport default\nclass PatternInputDefinition implements PatternBlock {\n  /** */\n  +masked: Masked<*>;\n  /** */\n  parent: Masked<*>;\n  /** */\n  isOptional: boolean;\n  /** */\n  isFilled: boolean;\n  /** */\n  lazy: $PropertyType<MaskedPattern, 'lazy'>;\n  /** */\n  eager: $PropertyType<Masked<string>, 'eager'>;\n  /** */\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>;\n\n\n  constructor(opts: PatternInputDefinitionOptions) {\n    const {mask, ...blockOpts} = opts;\n\n    this.masked = createMask({mask});\n    Object.assign(this, blockOpts);\n  }\n\n  reset () {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n\n    return new ChangeDetails();\n  }\n\n  get value (): string {\n    return this.masked.value ||\n      (this.isFilled && !this.isOptional ?\n        this.placeholderChar :\n        '');\n  }\n\n  get unmaskedValue (): string {\n    return this.masked.unmaskedValue;\n  }\n\n  get isComplete (): boolean {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n\n  _appendChar (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (this.isFilled) return new ChangeDetails();\n\n    const state = this.masked.state;\n    // simulate input\n    const details = this.masked._appendChar(ch, flags);\n\n    if (details.inserted && this.doValidate(flags) === false) {\n      details.inserted = details.rawInserted = '';\n      this.masked.state = state;\n    }\n\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n\n    return details;\n  }\n\n  append (...args: *): ChangeDetails {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(...args);\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled || this.isOptional) return details;\n\n    this.isFilled = true;\n    details.inserted = this.placeholderChar;\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  extractTail (...args: *): TailDetails {\n    return this.masked.extractTail(...args);\n  }\n\n  appendTail (...args: *): ChangeDetails {\n    return this.masked.appendTail(...args);\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default: return boundPos;\n    }\n  }\n\n  doValidate (...args: *): boolean {\n    return this.masked.doValidate(...args) && (\n      !this.parent || this.parent.doValidate(...args));\n  }\n\n  doCommit () {\n    this.masked.doCommit();\n  }\n\n  get state (): PatternInputDefinitionState {\n    return {\n      masked: this.masked.state,\n      isFilled: this.isFilled,\n    };\n  }\n\n  set state (state: PatternInputDefinitionState) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n}\n","// @flow\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction, isString } from '../../core/utils.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base.js';\nimport { type PatternBlock } from './block.js';\n\n\n/** */\ntype PatternFixedDefinitionOptions = {\n  char: $PropertyType<PatternFixedDefinition, 'char'>,\n  isUnmasking?: $PropertyType<PatternFixedDefinition, 'isUnmasking'>,\n};\n\ntype PatternFixedDefinitionState = {|\n  ...MaskedState,\n  _isRawInput: ?boolean,\n|};\n\nexport default\nclass PatternFixedDefinition implements PatternBlock {\n  /** */\n  _value: string;\n  /** */\n  char: string;\n  /** */\n  isUnmasking: ?boolean;\n  /** */\n  eager: boolean;\n  /** */\n  _isRawInput: ?boolean;\n  /** */\n  isFixed: boolean;\n\n  constructor(opts: PatternFixedDefinitionOptions) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  get unmaskedValue (): string {\n    return this.isUnmasking ? this.value : '';\n  }\n\n  reset () {\n    this._isRawInput = false;\n    this._value = '';\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this._value.length): ChangeDetails {\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n\n    return new ChangeDetails();\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this._value.length;\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this._value.length, flags?: ExtractFlags={}): string {\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return Boolean(this._value);\n  }\n\n  _appendChar (ch: string, flags?: AppendFlags={}): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this._value) return details;\n\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !this.eager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return this._appendChar(this.char, { tail: true });\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this._value) return details;\n\n    this._value = details.inserted = this.char;\n    return details;\n  }\n\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails('');\n  }\n\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\n    const details = this._appendChar(str[0], flags);\n\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n\n    return details;\n  }\n\n  doCommit () {}\n\n  get state (): PatternFixedDefinitionState {\n    return {\n      _value: this._value,\n      _isRawInput: this._isRawInput,\n    };\n  }\n\n  set state (state: PatternFixedDefinitionState) {\n    Object.assign(this, state);\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from '../../core/tail-details.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\n\ntype ChunksTailState = {\n  chunks: $PropertyType<ChunksTailDetails, 'chunks'>,\n  from: $PropertyType<ChunksTailDetails, 'from'>,\n  stop?: $PropertyType<ChunksTailDetails, 'stop'>,\n  blockIndex?: $PropertyType<ChunksTailDetails, 'blockIndex'>,\n};\n\nexport default\nclass ChunksTailDetails implements TailDetails {\n  chunks: Array<TailDetails>;\n  from: number;\n  stop: ?number;\n  /** */\n  blockIndex: ?number;\n\n  constructor (chunks?: Array<TailDetails>=[], from?: number=0) {\n    this.chunks = chunks;\n    this.from = from;\n  }\n\n  toString (): string {\n    return this.chunks.map(String).join('');\n  }\n\n  // $FlowFixMe no ideas\n  extend (tailChunk: string | String | TailDetails): void {\n    if (!String(tailChunk)) return;\n    if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\n\n    const lastChunk = this.chunks[this.chunks.length-1];\n    const extendLast = lastChunk &&\n      // if stops are same or tail has no stop\n      (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n      // if tail chunk goes just after last chunk\n      tailChunk.from === (lastChunk.from + lastChunk.toString().length);\n\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift();\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    // $FlowFixMe\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n\n    const details = new ChangeDetails();\n\n    for (let ci=0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null &&\n        // if block not found or stop is behind lastBlock\n        (!lastBlockIter || lastBlockIter.index <= stop)\n      ) {\n        if (\n          chunk instanceof ChunksTailDetails ||\n          // for continuous block also check if stop is exist\n          masked._stops.indexOf(stop) >= 0\n        ) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, { tail: true }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), { tail: true }));\n      }\n    };\n\n    return details;\n  }\n\n  get state (): ChunksTailState {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex,\n    };\n  }\n\n  set state (state: ChunksTailState) {\n    const { chunks, ...props } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ?\n        new ChunksTailDetails() :\n        new ContinuousTailDetails();\n      // $FlowFixMe already checked above\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.chunks.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci=0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n\n  shift (): string {\n    if (!this.chunks.length) return '';\n\n    let ci=this.chunks.length-1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n}\n","// @flow\nimport { DIRECTION } from '../../core/utils.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type PatternBlock } from './block.js';\n\n\ntype PatternCursorState = { offset: number, index: number, ok: boolean };\n\nexport default\nclass PatternCursor {\n  masked: MaskedPattern;\n  offset: number;\n  index: number;\n  ok: boolean;\n  _log: PatternCursorState[];\n\n  constructor (masked: MaskedPattern, pos: number) {\n    this.masked = masked;\n    this._log = [];\n\n    const { offset, index } = masked._mapPosToBlock(pos) || (\n      pos < 0 ?\n        // first\n        { index: 0, offset: 0 } :\n        // last\n        { index: this.masked._blocks.length, offset: 0 }\n    );\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n\n  get block (): PatternBlock {\n    return this.masked._blocks[this.index];\n  }\n\n  get pos (): number {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n\n  get state (): PatternCursorState {\n    return { index: this.index, offset: this.offset, ok: this.ok };\n  }\n\n  set state (s: PatternCursorState) {\n    Object.assign(this, s);\n  }\n\n  pushState () {\n    this._log.push(this.state);\n  }\n\n  popState (): PatternCursorState {\n    const s = this._log.pop();\n    this.state = s;\n    return s;\n  }\n\n  bindBlock () {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.value.length;\n    }\n  }\n\n  _pushLeft(fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); 0<=this.index; --this.index, this.offset=this.block?.value.length || 0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  _pushRight (fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); this.index<this.masked._blocks.length; ++this.index, this.offset=0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  pushLeftBeforeFilled (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n\n  pushLeftBeforeInput (): boolean {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushLeftBeforeRequired (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushRightBeforeFilled (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n\n  pushRightBeforeInput (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n\n  pushRightBeforeRequired (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by RegExp */\nexport default\nclass MaskedRegExp extends Masked<RegExp> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedOptions<RegExp>>) {\n    if (opts.mask) opts.validate = (value) => value.search(opts.mask) >= 0;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedRegExp = MaskedRegExp;\n","// @flow\nimport {DIRECTION, type Direction, forceDirection} from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked, { type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './base.js';\nimport PatternInputDefinition, { DEFAULT_INPUT_DEFINITIONS, type Definitions } from './pattern/input-definition.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type PatternBlock } from './pattern/block.js';\nimport PatternCursor from './pattern/cursor.js';\nimport createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport './regexp.js';  // support for default definitions which are regexp's\n\n\ntype MaskedPatternOptions = {\n  ...MaskedOptions<string>,\n  definitions?: $PropertyType<MaskedPattern, 'definitions'>,\n  blocks?: $PropertyType<MaskedPattern, 'blocks'>,\n  placeholderChar?: $PropertyType<MaskedPattern, 'placeholderChar'>,\n  lazy?: $PropertyType<MaskedPattern, 'lazy'>,\n};\n\ntype MaskedPatternState = {|\n  ...MaskedState,\n  _blocks: Array<*>,\n|};\n\ntype BlockPosData = {\n  index: number,\n  offset: number,\n};\n\n/**\n  Pattern mask\n  @param {Object} opts\n  @param {Object} opts.blocks\n  @param {Object} opts.definitions\n  @param {string} opts.placeholderChar\n  @param {boolean} opts.lazy\n*/\nexport default\nclass MaskedPattern extends Masked<string> {\n  static DEFAULTS: any;\n  static STOP_CHAR: string;\n  static ESCAPE_CHAR: string;\n  static InputDefinition: Class<PatternInputDefinition>;\n  static FixedDefinition: Class<PatternFixedDefinition>;\n\n  /** */\n  blocks: {[string]: MaskedOptions<any>};\n  /** */\n  definitions: Definitions;\n  /** Single char for empty input */\n  placeholderChar: string;\n  /** Show placeholder only when needed */\n  lazy: boolean;\n  _blocks: Array<PatternBlock>;\n  _maskedBlocks: {[string]: Array<number>};\n  _stops: Array<number>;\n\n  constructor (opts: any={}) {  // TODO type $Shape<MaskedPatternOptions>={} does not work\n    opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n    });\n  }\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedPatternOptions>={}) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n\n  /** */\n  _rebuildMask () {\n    const defs = this.definitions;\n    this._blocks = [];\n    this._stops = [];\n    this._maskedBlocks = {};\n\n    let pattern = this.mask;\n    if (!pattern || !defs) return;\n\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n\n    for (let i=0; i<pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          // $FlowFixMe no ideas\n          const maskedBlock = createMask({\n            parent: this,\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            overwrite: this.overwrite,\n            ...this.blocks[bName],\n          });\n\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n\n          i += bName.length - 1;\n          continue;\n        }\n      }\n\n      let char = pattern[i];\n      let isInput = char in defs;\n\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n\n      const def = isInput ?\n        new PatternInputDefinition({\n          parent: this,\n          lazy: this.lazy,\n          eager: this.eager,\n          placeholderChar: this.placeholderChar,\n          mask: defs[char],\n          isOptional: optionalBlock,\n        }) :\n        new PatternFixedDefinition({\n          char,\n          eager: this.eager,\n          isUnmasking: unmaskingBlock,\n        });\n\n      this._blocks.push(def);\n    }\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedPatternState {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state),\n    };\n  }\n\n  set state (state: MaskedPatternState) {\n    const {_blocks, ...maskedState} = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return this._blocks.every(b => b.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return this._blocks.every(b => b.isFilled);\n  }\n\n  get isFixed (): boolean {\n    return this._blocks.every(b => b.isFixed);\n  }\n\n  get isOptional (): boolean {\n    return this._blocks.every(b => b.isOptional);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    // TODO return _value when not in change?\n    return this._blocks.reduce((str, b) => str += b.value, '');\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  /**\n    @override\n  */\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n\n  /**\n    @override\n  */\n  _appendEager (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    let startBlockIndex = this._mapPosToBlock(this.value.length)?.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n\n    for (let bi=startBlockIndex; bi<this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n\n      details.aggregate(d);\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const blockIter = this._mapPosToBlock(this.value.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n\n    for (let bi=blockIter.index; ; ++bi) {\n      const block = this._blocks[bi];\n      if (!block) break;\n\n      const blockDetails = block._appendChar(ch, { ...flags, _beforeTailState: flags._beforeTailState?._blocks?.[bi] });\n\n      const skip = blockDetails.skip;\n      details.aggregate(blockDetails);\n\n      if (skip || blockDetails.rawInserted) break; // go next char\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): ChunksTailDetails {\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n\n      chunkTail.extend(blockChunk);\n    });\n\n    return chunkTail;\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags: ExtractFlags={}): string {\n    if (fromPos === toPos) return '';\n\n    let input = '';\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n\n    return input;\n  }\n\n  _findStopBefore (blockIndex: number): ?number {\n    let stopBefore;\n    for (let si=0; si<this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;\n      else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder (toBlockIndex: ?number): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n\n    const startBlockIter = this._mapPosToBlock(this.value.length);\n    if (!startBlockIter) return details;\n\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n\n    this._blocks.slice(startBlockIndex, endBlockIndex)\n      .forEach(b => {\n        if (!b.lazy || toBlockIndex != null) {\n          // $FlowFixMe `_blocks` may not be present\n          const args = b._blocks != null ? [b._blocks.length] : [];\n          const bDetails = b._appendPlaceholder(...args);\n          this._value += bDetails.inserted;\n          details.aggregate(bDetails);\n        }\n      });\n\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock (pos: number): ?BlockPosData {\n    let accVal = '';\n    for (let bi=0; bi<this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n\n      accVal += block.value;\n\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos,\n        };\n      }\n    }\n  }\n\n  /** */\n  _blockStartPos (blockIndex: number): number {\n    return this._blocks\n      .slice(0, blockIndex)\n      .reduce((pos, b) => pos += b.value.length, 0);\n  }\n\n  /** */\n  _forEachBlocksInRange (fromPos: number, toPos: number=this.value.length, fn: (block: PatternBlock, blockIndex: number, fromPos: number, toPos: number) => void) {\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ?\n        toBlockIter.offset :\n        this._blocks[fromBlockIter.index].value.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi=fromBlockIter.index+1; bi<toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.value.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      // cursor.popState();\n      // if (\n      //   cursor.pushRightBeforeInput() &&\n      //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\n      //   (!this.lazy || this.extractInput())\n      // ) return cursor.pos;\n\n      return 0;\n    }\n\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.value.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n\n    return cursorPos;\n  }\n\n  /** Get block by name */\n  maskedBlock (name: string): ?PatternBlock {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks (name: string): Array<PatternBlock> {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\nMaskedPattern.DEFAULTS = {\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\n\n\nIMask.MaskedPattern = MaskedPattern;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport { type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which accepts ranges */\nexport default\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n  maxLength: number;\n  /** Min bound */\n  from: number;\n  /** Max bound */\n  to: number;\n  /** */\n  autofix: boolean | 'pad';\n\n  get _matchFrom (): number {\n    return this.maxLength - String(this.from).length;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {  // TODO type\n    opts = {\n      to: this.to || 0,\n      from: this.from || 0,\n      maxLength: this.maxLength || 0,\n      ...opts,\n    };\n\n    let maxLength = String(opts.to).length;\n    if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\n    opts.maxLength = maxLength;\n\n    const fromStr = String(opts.from).padStart(maxLength, '0');\n    const toStr = String(opts.to).padStart(maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return super.isComplete && Boolean(this.value);\n  }\n\n  boundaries (str: string): [string, string] {\n    let minstr = '';\n    let maxstr = '';\n\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n\n    return [minstr, maxstr];\n  }\n\n  // TODO str is a single char everytime\n  /**\n    @override\n  */ \n  doPrepare (ch: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(super.doPrepare(ch.replace(/\\D/g, ''), flags));\n\n    if (!this.autofix || !ch) return ch;\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n\n    let nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return '';\n\n    const [minstr, maxstr] = this.boundaries(nextVal);\n\n    if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\n\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1]+ch, flags))];\n      }\n      return toStr[nextVal.length - 1];\n    }\n\n    return ch;\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const str = this.value;\n\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n\n    const [minstr, maxstr] = this.boundaries(str);\n\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedRange = MaskedRange;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\n\n\n/** Date mask */\nexport default\nclass MaskedDate extends MaskedPattern {\n  static GET_DEFAULT_BLOCKS: () => {[string]: any};\n  static DEFAULTS: any;\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n  pattern: string;\n  /** Start date */\n  min: ?Date;\n  /** End date */\n  max: ?Date;\n  /** */\n  autofix: boolean | 'pad';\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    if (opts.mask === Date) delete opts.mask;\n    if (opts.pattern) opts.mask = opts.pattern;\n\n    const blocks = opts.blocks;\n    opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\n    if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to\n    ) {\n      opts.blocks.m.from = opts.min.getMonth() + 1;\n      opts.blocks.m.to = opts.max.getMonth() + 1;\n\n      if (opts.blocks.m.from === opts.blocks.m.to) {\n        opts.blocks.d.from = opts.min.getDate();\n        opts.blocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(opts.blocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(opts.blocks).forEach(bk => {\n      const b = opts.blocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const date = this.date;\n\n    return super.doValidate(...args) &&\n      (!this.isComplete ||\n        this.isDateExist(this.value) && date != null &&\n        (this.min == null || this.min <= date) &&\n        (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist (str: string): boolean {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date (): ?Date {\n    return this.typedValue;\n  }\n  set date (date: Date) {\n    this.typedValue = date;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): ?Date {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue (value: Date) {\n    super.typedValue = value;\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return mask === Date || super.maskEquals(mask);\n  }\n}\nMaskedDate.DEFAULTS = {\n  pattern: 'd{.}`m{.}`Y',\n  format: date => {\n    if (!date) return '';\n\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n\n    return [day, month, year].join('.');\n  },\n  parse: str => {\n    const [day, month, year] = str.split('.');\n    return new Date(year, month - 1, day);\n  },\n};\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2,\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2,\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999,\n  }\n});\n\n\nIMask.MaskedDate = MaskedDate;\n","// @flow\nimport IMask from '../core/holder.js';\n\n\nexport\ntype ElementEvent =\n  'selectionChange' |\n  'input' |\n  'drop' |\n  'click' |\n  'focus' |\n  'commit';\n\n/**\n  Generic element API to use with mask\n  @interface\n*/\nexport default\nclass MaskElement {\n  /** */\n  +_unsafeSelectionStart: number;\n  /** */\n  +_unsafeSelectionEnd: number;\n  /** */\n  value: string;\n\n  /** Safely returns selection start */\n  get selectionStart (): number {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch (e) {}\n\n    return start != null ?\n      start :\n      this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd (): number {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch (e) {}\n\n    return end != null ?\n      end :\n      this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select (start: number, end: number) {\n    if (start == null || end == null ||\n      start === this.selectionStart && end === this.selectionEnd) return;\n\n    try {\n      this._unsafeSelect(start, end);\n    } catch (e) {}\n  }\n\n  /** Should be overriden in subclasses */\n  _unsafeSelect (start: number, end: number): void {}\n  /** Should be overriden in subclasses */\n  get isActive (): boolean { return false; }\n  /** Should be overriden in subclasses */\n  bindEvents (handlers: {[ElementEvent]: Function}) {}\n  /** Should be overriden in subclasses */\n  unbindEvents (): void {}\n}\n\n\nIMask.MaskElement = MaskElement;\n","// @flow\nimport MaskElement, {type ElementEvent} from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Bridge between HTMLElement and {@link Masked} */\nexport default\nclass HTMLMaskElement extends MaskElement {\n  /** Mapping between HTMLElement events and mask internal events */\n  static EVENTS_MAP: {[ElementEvent]: string};\n  /** HTMLElement to use mask on */\n  input: HTMLTextAreaElement | HTMLInputElement;\n  _handlers: {[string]: Function};\n\n  /**\n    @param {HTMLInputElement|HTMLTextAreaElement} input\n  */\n  constructor (input: HTMLTextAreaElement | HTMLInputElement) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n  get rootElement (): HTMLDocument {\n    return this.input.getRootNode?.() ?? document;\n  }\n\n  /**\n    Is element in focus\n    @readonly\n  */\n  get isActive (): boolean {\n    //$FlowFixMe\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    return this.input.selectionStart;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    return this.input.selectionEnd;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    this.input.setSelectionRange(start, end);\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    return this.input.value;\n  }\n  set value (value: string) {\n    this.input.value = value;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n    @override\n  */\n  bindEvents (handlers: {[ElementEvent]: Function}) {\n    Object.keys(handlers)\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n    @override\n  */\n  unbindEvents () {\n    Object.keys(this._handlers)\n      .forEach(event => this._toggleEventHandler(event));\n  }\n\n  /** */\n  _toggleEventHandler (event: string, handler?: Function): void {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur',\n};\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","// @flow\nimport HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\nexport default\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    if (!this.rootElement.createRange) return;\n\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    // $FlowFixMe\n    return this.input.textContent;\n  }\n  set value (value: string) {\n    this.input.textContent = value;\n  }\n}\n\n\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n","// @flow\nimport {objectIncludes, DIRECTION, type Selection} from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport MaskedDate from '../masked/date.js';\nimport createMask, {maskedClass} from '../masked/factory.js';\nimport type Masked from '../masked/base.js';\nimport {type Mask} from '../masked/base.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nexport default\nclass InputMask {\n  /**\n    View element\n    @readonly\n  */\n  el: MaskElement;\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n  masked: Masked<*>;\n  alignCursor: () => void;\n  alignCursorFriendly: () => void;\n\n  _listeners: {[string]: Array<Function>};\n  _value: string;\n  _changingCursorPos: number;\n  _unmaskedValue: string;\n  _saveSelection: (?Event) => void;\n  _selection: Selection;\n  _onInput: () => void;\n  _onChange: () => void;\n  _onDrop: (Event) => void;\n  _onFocus: (Event) => void;\n  _onClick: (Event) => void;\n  _cursorChanging: ?TimeoutID;\n  _inputEvent: ?InputEvent;\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  constructor (el: MaskElement | HTMLTextAreaElement | HTMLInputElement, opts: {[string]: any} | Masked<*>) {\n    this.el =\n      (el instanceof MaskElement) ? el :\n      (el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA') ? new HTMLContenteditableMaskElement(el) :\n      new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  get mask (): Mask {\n    return this.masked.mask;\n  }\n\n  maskEquals (mask: Mask): boolean {\n    return mask == null || this.masked?.maskEquals(mask);\n  }\n\n  set mask (mask: Mask) {\n    if (this.maskEquals(mask)) return;\n\n    // $FlowFixMe No ideas ... after update\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      this.masked.updateOptions({mask});\n      return;\n    }\n\n    const masked = createMask({mask});\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (str: string) {\n    if (this.value === str) return;\n\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue (): string {\n    return this._unmaskedValue;\n  }\n\n  set unmaskedValue (str: string) {\n    if (this.unmaskedValue === str) return;\n\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue (): any {\n    return this.masked.typedValue;\n  }\n\n  set typedValue (val: any) {\n    if (this.masked.typedValueEquals(val)) return;\n\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /**\n    Starts listening to element events\n    @protected\n  */\n  _bindEvents () {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n    });\n  }\n\n  /**\n    Stops listening to element events\n    @protected\n   */\n  _unbindEvents () {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /**\n    Fires custom event\n    @protected\n   */\n  _fireEvent (ev: string, ...args: *) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n\n    listeners.forEach(l => l(...args));\n  }\n\n  /**\n    Current selection start\n    @readonly\n  */\n  get selectionStart (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionEnd;\n  }\n  set cursorPos (pos: number) {\n    if (!this.el || !this.el.isActive) return;\n\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /**\n    Stores current selection\n    @protected\n  */\n  _saveSelection (/* ev */) {\n    if (this.value !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue () {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl () {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\n      this.value !== newValue);\n\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n\n    if (this.el.value !== newValue) this.el.value = newValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  updateOptions (opts: {[string]: any}) {\n    const { mask, ...restOpts } = opts;\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor (cursorPos: number) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /**\n    Delays cursor update to support mobile browsers\n    @private\n  */\n  _delayUpdateCursor (cursorPos: number) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /**\n    Fires custom events\n    @protected\n  */\n  _fireChangeEvents () {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /**\n    Aborts delayed cursor update\n    @private\n  */\n  _abortUpdateCursor () {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor () {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly () {\n    if (this.selectionStart !== this.cursorPos) return;  // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput (e: InputEvent): void {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n\n    const details = new ActionDetails(\n      // new state\n      this.el.value, this.cursorPos,\n      // old state\n      this.value, this._selection,\n    );\n\n    const oldRawValue = this.masked.rawInputValue;\n\n    const offset = this.masked.splice(\n      details.startChangePos,\n      details.removed.length,\n      details.inserted,\n      details.removeDirection,\n      { input: true, raw: true },\n    ).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ?\n      details.removeDirection :\n      DIRECTION.NONE;\n\n    let cursorPos = this.masked.nearestInputPos(\n      details.startChangePos + offset,\n      removeDirection,\n    );\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange () {\n    if (this.value !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop (ev: Event) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy () {\n    this._unbindEvents();\n    // $FlowFixMe why not do so?\n    this._listeners.length = 0;\n    // $FlowFixMe\n    delete this.el;\n  }\n}\n\n\nIMask.InputMask = InputMask;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which validates enum values */\nexport default\nclass MaskedEnum extends MaskedPattern {\n  enum: Array<string>;\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: any) {  // TODO type\n    if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedEnum = MaskedEnum;\n","// @flow\nimport { escapeRegExp, indexInDirection, posInDirection, type Direction, DIRECTION, normalizePrepare } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\n\nimport Masked, { type MaskedOptions, type ExtractFlags, type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedNumberOptions = {\n  ...MaskedOptions<Class<Number>>,\n  radix: $PropertyType<MaskedNumber, 'radix'>,\n  thousandsSeparator: $PropertyType<MaskedNumber, 'thousandsSeparator'>,\n  mapToRadix: $PropertyType<MaskedNumber, 'mapToRadix'>,\n  scale: $PropertyType<MaskedNumber, 'scale'>,\n  signed: $PropertyType<MaskedNumber, 'signed'>,\n  normalizeZeros: $PropertyType<MaskedNumber, 'normalizeZeros'>,\n  padFractionalZeros: $PropertyType<MaskedNumber, 'padFractionalZeros'>,\n};\n\n/**\n  Number mask\n  @param {Object} opts\n  @param {string} opts.radix - Single char\n  @param {string} opts.thousandsSeparator - Single char\n  @param {Array<string>} opts.mapToRadix - Array of single chars\n  @param {number} opts.min\n  @param {number} opts.max\n  @param {number} opts.scale - Digits after point\n  @param {boolean} opts.signed - Allow negative\n  @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\n  @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\n*/\nexport default\nclass MaskedNumber extends Masked<Class<Number>> {\n  static DEFAULTS: $Shape<MaskedNumberOptions>;\n\n  /** Single char */\n  radix: string;\n  /** Single char */\n  thousandsSeparator: string;\n  /** Array of single chars */\n  mapToRadix: Array<string>;\n  /** */\n  min: number;\n  /** */\n  max: number;\n  /** Digits after point */\n  scale: number;\n  /** */\n  signed: boolean;\n  /** Flag to remove leading and trailing zeros in the end of editing */\n  normalizeZeros: boolean;\n  /** Flag to pad trailing zeros after point in the end of editing */\n  padFractionalZeros: boolean;\n\n  _numberRegExp: RegExp;\n  _thousandsSeparatorRegExp: RegExp;\n  _mapToRadixRegExp: RegExp;\n  _separatorsProcessed: boolean;\n\n  constructor (opts: $Shape<MaskedNumberOptions>) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: MaskedNumberOptions) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n\n  /** */\n  _updateRegExps () {\n    let start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    let mid = '\\\\d*';\n    let end = (this.scale ?\n      `(${escapeRegExp(this.radix)}\\\\d{0,${this.scale}})?` :\n      '') + '$';\n\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(`[${this.mapToRadix.map(escapeRegExp).join('')}]`, 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n\n  /** */\n  _removeThousandsSeparators (value: string): string {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n\n  /** */\n  _insertThousandsSeparators (value: string): string {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n\n  /**\n    @override\n  */\n  doPrepare (ch: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    ch = this._removeThousandsSeparators(\n      this.scale && this.mapToRadix.length && flags.raw ? ch.replace(this._mapToRadixRegExp, this.radix) : ch\n    );\n    const [prepCh, details] = normalizePrepare(super.doPrepare(ch, flags));\n    if (ch && !prepCh) details.skip = true;\n    return [prepCh, details];\n  }\n\n  /** */\n  _separatorsCount (to: number, extendOnSeparators: boolean=false): number {\n    let count = 0;\n\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n\n    return count;\n  }\n\n  /** */\n  _separatorsCountFromSlice (slice: string=this._value): number {\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n\n    const appendDetails = super._appendCharRaw(ch, flags);\n\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n    return appendDetails;\n  }\n\n  /** */\n  _findSeparatorAround (pos: number): number {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n\n    return -1;\n  }\n\n  _adjustRangeWithSeparators (from: number, to: number): [number, number] {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length,\n    });\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    if (!this.thousandsSeparator) return cursorPos;\n\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT: {\n        const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n        if (separatorAtLeftPos >= 0) {\n          const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n          if (cursorPos < separatorAtLeftEndPos ||\n            this.value.length <= separatorAtLeftEndPos ||\n            direction === DIRECTION.FORCE_LEFT\n          ) {\n            return separatorAtLeftPos;\n          }\n        }\n        break;\n      }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT: {\n        const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n        if (separatorAtRightPos >= 0) {\n          return separatorAtRightPos + this.thousandsSeparator.length;\n        }\n      }\n    }\n\n    return cursorPos;\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    // validate as string\n    let valid = Boolean(this._removeThousandsSeparators(this.value).match(this._numberRegExp));\n\n    if (valid) {\n      // validate as number\n      const number = this.number;\n      valid = valid && !isNaN(number) &&\n        // check min bound for negative values\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\n        // check max bound for positive values\n        (this.max == null || this.max <= 0 || this.number <= this.max);\n    }\n\n    return valid && super.doValidate(flags);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n\n      if (validnum !== number) this.unmaskedValue = String(validnum);\n\n      let formatted = this.value;\n\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n\n      this._value = formatted;\n    }\n\n    super.doCommit();\n  }\n\n  /** */\n  _normalizeZeros (value: string): string {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\n      if (!parts[1].length) parts.length = 1;  // remove fractional\n    }\n\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n\n  /** */\n  _padFractionalZeros (value: string): string {\n    if (!value) return value;\n\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._removeThousandsSeparators(\n      this._normalizeZeros(\n        this.value))\n      .replace(this.radix, '.');\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue.replace('.', this.radix);\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): number {\n    return Number(this.unmaskedValue);\n  }\n\n  set typedValue (n: number) {\n    this.rawInputValue = String(n).replace('.', this.radix);\n  }\n\n  /** Parsed Number */\n  get number (): number {\n    return this.typedValue;\n  }\n\n  set number (number: number) {\n    this.typedValue = number;\n  }\n\n  /**\n    Is negative allowed\n    @readonly\n  */\n  get allowNegative (): boolean {\n    return this.signed ||\n      (this.min != null && this.min < 0) ||\n      (this.max != null && this.max < 0);\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (\n      super.typedValueEquals(value) ||\n      MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)\n    ) && !(value === 0 && this.value === '');\n  }\n}\nMaskedNumber.DEFAULTS = {\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: ['.'],\n  scale: 2,\n  signed: false,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n};\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\n\nIMask.MaskedNumber = MaskedNumber;\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by custom Function */\nexport default\nclass MaskedFunction extends Masked<Function> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: MaskedOptions<Function>) {\n    if (opts.mask) opts.validate = opts.mask;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedFunction = MaskedFunction;\n","// @flow\nimport ChangeDetails from '../core/change-details.js';\nimport createMask from './factory.js';\nimport Masked, { type AppendFlags, type MaskedState } from './base.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedDynamicState = {|\n  ...MaskedState,\n  _rawInputValue: string,\n  compiledMasks: Array<*>,\n  currentMaskRef: ?Masked<*>,\n  currentMask: *,\n|};\n\ntype DynamicMaskType = Array<{[string]: any}>;\n/** Dynamic mask for choosing apropriate mask in run-time */\nexport default\nclass MaskedDynamic extends Masked<DynamicMaskType> {\n  /** Currently chosen mask */\n  currentMask: ?Masked<*>;\n  /** Compliled {@link Masked} options */\n  compiledMasks: Array<Masked<*>>;\n  /** Chooses {@link Masked} depending on input value */\n  dispatch: (string, Masked<*>, AppendFlags) => Masked<*>;\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n\n    this.currentMask = null;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    super._update(opts);\n    if ('mask' in opts) {\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ?\n        opts.mask.map(m => createMask(m)) :\n        [];\n    }\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const details = this._applyDispatch(ch, flags);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n\n    return details;\n  }\n\n  _applyDispatch (appended: string='', flags: AppendFlags={}): ChangeDetails {\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._value :\n      this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ?\n      // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue :\n      inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n\n    const prevMaskState = prevMask?.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, { ...flags });\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n\n        if (insertValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          const d = this.currentMask.append(insertValue, {raw: true});\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n        }\n\n        if (tailValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          details.tailShift += this.currentMask.append(tailValue, {raw: true, tail: true}).tailShift;\n        }\n      } else {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n\n    return details;\n  }\n\n  _appendPlaceholder (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n\n    return details;\n  }\n\n   /**\n    @override\n  */\n  _appendEager (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n\n    return details;\n  }\n\n  currentMaskFlags (flags: AppendFlags): AppendFlags {\n    return {\n      ...flags,\n      _beforeTailState: flags._beforeTailState?.currentMaskRef === this.currentMask && flags._beforeTailState?.currentMask ||\n        flags._beforeTailState,\n    };\n  }\n\n  /**\n    @override\n  */\n  doDispatch(appended: string, flags: AppendFlags={}): ?Masked<*> {\n    return this.dispatch(appended, this, flags);\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return super.doValidate(flags) && (\n      !this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags))\n    );\n  }\n\n  /**\n    @override\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let [s, details] = normalizePrepare(super.doPrepare(str, flags));\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = normalizePrepare(super.doPrepare(s, this.currentMaskFlags(flags))));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    this.currentMask?.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    return this.currentMask ? this.currentMask.value : '';\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): any {\n    return this.currentMask ? this.currentMask.typedValue : '';\n  }\n\n  // probably typedValue should not be used with dynamic\n  set typedValue (value: any) {\n    let unmaskedValue = String(value);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = value;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return Boolean(this.currentMask?.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return Boolean(this.currentMask?.isFilled);\n  }\n\n  /**\n    @override\n  */\n  remove (...args: *): ChangeDetails {\n    const details: ChangeDetails = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(...args))\n        // update with dispatch\n        .aggregate(this._applyDispatch());\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedDynamicState {\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: this.currentMask?.state,\n    };\n  }\n\n  set state (state: MaskedDynamicState) {\n    const {compiledMasks, currentMaskRef, currentMask, ...maskedState} = state;\n    this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  extractInput (...args: *): string {\n    return this.currentMask ?\n      this.currentMask.extractInput(...args) :\n      '';\n  }\n\n  /**\n    @override\n  */\n  extractTail (...args: *): TailDetails {\n    return this.currentMask ?\n      this.currentMask.extractTail(...args) :\n      super.extractTail(...args);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos(...args: *): number {\n    return this.currentMask ?\n      this.currentMask.nearestInputPos(...args) :\n      super.nearestInputPos(...args);\n  }\n\n  get overwrite (): ?boolean | 'shift' {\n    return this.currentMask ?\n      this.currentMask.overwrite :\n      super.overwrite;\n  }\n\n  set overwrite (overwrite: *) {\n    console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  get eager (): boolean {\n    return this.currentMask ?\n      this.currentMask.eager :\n      super.eager;\n  }\n\n  set eager (eager: *) {\n    console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return Array.isArray(mask) &&\n      this.compiledMasks.every((m, mi) => m.maskEquals(mask[mi]?.mask));\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    return Boolean(this.currentMask?.typedValueEquals(value));\n  }\n}\n\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags) => {\n    if (!masked.compiledMasks.length) return;\n\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      m.reset();\n      m.append(inputValue, { raw: true });\n      m.append(appended, masked.currentMaskFlags(flags));\n      const weight = m.rawInputValue.length;\n\n      return {weight, index};\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight);\n\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\n\n\nIMask.MaskedDynamic = MaskedDynamic;\n","import createMask from './factory';\nimport IMask from '../core/holder.js';\n\n\n/** Mask pipe source and destination types */\nexport\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue',\n};\n\n/** Creates new pipe function depending on mask type, source and destination options */\nexport\nfunction createPipe (mask, from=PIPE_TYPE.MASKED, to=PIPE_TYPE.MASKED) {\n  const masked = createMask(mask);\n  return (value) => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nexport\nfunction pipe (value, ...pipeArgs) {\n  return createPipe(...pipeArgs)(value);\n}\n\n\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n","import IMask from './imask.js';\nexport { default as InputMask } from './controls/input.js';\n\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as createMask } from './masked/factory.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { createPipe, pipe, PIPE_TYPE } from './masked/pipe.js';\n\nexport { default as ChangeDetails } from './core/change-details.js';\n\n\ntry {\n  globalThis.IMask = IMask;\n} catch(e) {}\nexport default IMask;\n"],"names":["ChangeDetails","details","_classCallCheck","Object","assign","this","inserted","rawInserted","skip","tailShift","_createClass","key","value","get","length","isString","str","String","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","escapeRegExp","replace","normalizePrepare","prep","Array","isArray","objectIncludes","b","a","i","arrA","arrB","_typeof","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","keys","prototype","hasOwnProperty","call","ActionDetails","cursorPos","oldValue","oldSelection","slice","startChangePos","start","Math","min","substr","insertedCount","max","end","removedCount","substring","ContinuousTailDetails","arguments","undefined","from","stop","tail","masked","append","aggregate","_appendPlaceholder","set","state","beforePos","shiftChar","IMask","el","opts","InputMask","Masked","_value","_update","DEFAULTS","isInitialized","withValueRefresh","bind","resolve","reset","input","doCommit","doParse","doFormat","extractInput","raw","isComplete","direction","fromPos","toPos","appendTo","ch","flags","checkTail","consistentState","_normalizePrepare2","_slicedToArray","doPrepare","_appendCharRaw","consistentTail","appended","doValidate","beforeTailState","overwrite","unshift","tailDetails","appendTail","shift","Error","_beforeTailState","ci","_appendChar","eager","_appendEager","fn","_refreshing","rawInput","rawInputValue","ret","indexOf","_isolated","prepare","validate","parent","commit","format","parse","deleteCount","removeDirection","oldRawValue","tailPos","extractTail","forceDirection","nearestInputPos","remove","valLength","mask","tval","typedValue","EMPTY_VALUES","includes","maskedClass","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","constructor","Function","MaskedFunction","console","warn","createMask","MaskedClass","v","DEFAULT_INPUT_DEFINITIONS","PatternInputDefinition","blockOpts","_objectWithoutProperties","_excluded","isFilled","isOptional","placeholderChar","unmaskedValue","Boolean","lazy","_this$masked","apply","_this$masked2","_this$masked3","maxPos","boundPos","_this$masked4","_this$parent","PatternFixedDefinition","isFixed","isUnmasking","_isRawInput","isResolved","char","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","extend","push","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","_blocks","remainChars","c","props","cstate","chunkShiftPos","splice","PatternCursor","pos","_log","_ref","offset","ok","_blockStartPos","s","pop","block","pushState","bindBlock","_this$block","_this","_pushLeft","_this2","_this3","_this4","_pushRight","_this5","_this6","_Masked","_inherits","_super","_createSuper","search","_get","_getPrototypeOf","definitions","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","_loop","_i","blocks","p","bNames","filter","bName","sort","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","_ret","maskedState","forEach","bi","_set","every","reduce","_this$_mapPosToBlock","startBlockIndex","d","blockIter","_flags$_beforeTailSta","_flags$_beforeTailSta2","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","_","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","args","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","pushRightBeforeInput","popState","pushLeftBeforeInput","pushRightBeforeFilled","pushLeftBeforeRequired","pushLeftBeforeFilled","pushRightBeforeRequired","name","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_MaskedPattern","maxLength","to","fromStr","padStart","toStr","sameCharsCount","repeat","minstr","maxstr","_ref2","match","placeholder","num","padEnd","autofix","nextVal","_this$boundaries2","boundaries","_get2","_matchFrom","_this$boundaries4","_len","_key","concat","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","bk","date","isDateExist","_str$split2","split","day","month","year","MaskElement","_unsafeSelectionStart","e","_unsafeSelectionEnd","selectionStart","selectionEnd","_unsafeSelect","handlers","HTMLMaskElement","_MaskElement","_handlers","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","rootElement","activeElement","setSelectionRange","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","HTMLContenteditableMaskElement","_HTMLMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","isContentEditable","tagName","_listeners","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","maskEquals","updateOptions","updateControl","val","typedValueEquals","bindEvents","unbindEvents","ev","listeners","l","_cursorChanging","_changingCursorPos","isActive","select","_selection","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_fireEvent","_inputEvent","clearTimeout","hIndex","removed","updateCursor","preventDefault","stopPropagation","_unbindEvents","MaskedEnum","enum","some","_updateRegExps","allowNegative","scale","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","parts","_removeThousandsSeparators","prepCh","extendOnSeparators","count","_separatorsCount","_this$_adjustRangeWit2","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","_separatorsCountFromSlice","appendDetails","_insertThousandsSeparators","beforeTailValue","beforeTailSeparatorsCount","searchFrom","separatorPos","separatorAroundFromPos","_findSeparatorAround","separatorAroundToPos","_this$_adjustRangeWit4","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","number","isNaN","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","n","signed","currentMask","compiledMasks","_applyDispatch","currentMaskFlags","prevValueBeforeTail","inputValue","insertValue","_rawInputValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","_normalizePrepare4","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","_this$currentMask5","mi","_this$currentMask6","_this$currentMask7","_this$currentMask8","_get3","_len2","_key2","_mask$mi","_this$currentMask9","inputs","weight","i1","i2","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","runIsolated","pipe","pipeArgs","globalThis"],"mappings":"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"}